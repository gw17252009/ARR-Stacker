---
networks: # docker network create caddy
  caddy:
    external: true

x-environment: &default
  TZ: $TZ
  PUID: $PUID
  PGID: $PGID

services:
  caddy:
    container_name: caddy
    environment:
      <<: *default
      CADDY_INGRESS_NETWORKS: caddy
    extra_hosts:
      - host.docker.internal:host-gateway
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    networks:
      - caddy
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    volumes:
      - "<path/for/config>/caddy_data:/data"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #### Subtitles Management ####
  bazarr:
    container_name: bazarr
    environment:
      <<: *default
      DOCKER_MODS: ghcr.io/gilbn/theme.park:bazarr
      TP_THEME: dracula
    image: lscr.io/linuxserver/bazarr
    labels:
      caddy: bazarr.$DOMAIN
      caddy.reverse_proxy: "{{upstreams 6767}}"
    networks:
      - caddy
    ports:
      - "6767:6767"
    restart: unless-stopped
    volumes:
      - "<path/for/config>/bazarr:/config"
      - "<path/for/media>:/data/media"
  #### Music management ####
  lidarr:
    container_name: lidarr
    environment:
      <<: *default
      DOCKER_MODS: ghcr.io/gilbn/theme.park:lidarr
      TP_THEME: dracula
    image: lscr.io/linuxserver/lidarr
    labels:
      caddy: lidarr.$DOMAIN
      caddy.reverse_proxy: "{{upstreams 8686}}"
    networks:
      - caddy
    ports:
      - 8686:8686
    restart: unless-stopped
    volumes:
      - "<path/for/config>/lidarr:/config"
      - "<path/for/media>:/data/media"
      - "<path/for/downloads>:/data/torrents"
  #### Media requests ####
  overseerr:
    container_name: overseerr
    environment:
      <<: *default
      LOG_LEVEL: info
    image: sctx/overseerr
    labels:
      caddy: overseerr.$DOMAIN
      caddy.reverse_proxy: "{{upstreams 5055}}"
    networks:
      - caddy
    ports:
      - "5055:5055"
    restart: unless-stopped
    volumes:
      - "<path/for/config>/overseerr:/app/config"
  #### Indexer management ####
  prowlarr:
    container_name: prowlarr
    environment:
      <<: *default
      DOCKER_MODS: ghcr.io/gilbn/theme.park:prowlarr
      TP_THEME: dracula
    image: lscr.io/linuxserver/prowlarr
    labels:
      caddy: prowlarr.$DOMAIN
      caddy.reverse_proxy: "{{upstreams 9696}}"
    networks:
      - caddy
    ports:
      - "9696:9696"
    restart: unless-stopped
    volumes:
      - "<path/for/config>/prowlarr:/config"
  flaresolverr:
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=info
      - TZ=$TZ
    image: ghcr.io/flaresolverr/flaresolverr:latest
    networks:
      - caddy
    ports:
      - "8191:8191"
    restart: unless-stopped
  #### Movie management ####
  radarr:
    container_name: radarr
    environment:
      <<: *default
      DOCKER_MODS: ghcr.io/gilbn/theme.park:radarr
      TP_THEME: dracula
    image: lscr.io/linuxserver/radarr
    labels:
      caddy: radarr.$DOMAIN
      caddy.reverse_proxy: "{{upstreams 7878}}"
    networks:
      - caddy
    ports:
      - "7878:7878"
    restart: unless-stopped
    volumes:
      - "<path/for/config>/radarr:/config"
      - "<path/for/media>:/data/media"
      - "<path/for/downloads>:/data/torrents"
  #### Books Management ####
  readarr:
    container_name: readarr
    environment:
      <<: *default
      UMASK: 002
      DOCKER_MODS: ghcr.io/gilbn/theme.park:readarr
      TP_THEME: dracula
    image: lscr.io/linuxserver/readarr:nightly
    labels:
      caddy: readarr.$DOMAIN
      caddy.reverse_proxy: "{{upstreams 8787}}"
    networks:
      - caddy
    ports:
      - 8787:8787
    restart: unless-stopped
    volumes:
      - "<path/for/config>/readarr:/config"
      - "<path/for/media>:/data/media"
      - "<path/for/downloads>:/data/torrents"
  #### Series management ####
  sonarr:
    container_name: sonarr
    environment:
      <<: *default
      DOCKER_MODS: ghcr.io/gilbn/theme.park:sonarr
      TP_THEME: dracula
    image: lscr.io/linuxserver/sonarr
    labels:
      caddy: sonarr.$DOMAIN
      caddy.reverse_proxy: "{{upstreams 8989}}"
    networks:
      - caddy
    ports:
      - "8989:8989"
    restart: unless-stopped
    volumes:
      - "<path/for/config>/sonarr:/config"
      - "<path/for/media>:/data/media"
      - "<path/for/downloads>:/data/torrents"
#### Docker updater ####
  watchtower:
    container_name: watchtower
    environment:
      <<: *default
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_REMOVE_VOLUMES: false
      WATCHTOWER_INCLUDE_STOPPED: true
      WATCHTOWER_POLL_INTERVAL: 53200
    image: containrrr/watchtower
    networks:
      - caddy
    restart: unless-stopped
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #### Download Client ####
  transmission:
    cap_add:
      - NET_ADMIN
    container_name: transmission
    environment:
      <<: *default
      TRANSMISSION_RPC_USERNAME: $TRANSMISSION_RPC_USERNAME # username to access transmission can remove if you dont want basic auth
      TRANSMISSION_RPC_PASSWORD: $TRANSMISSION_RPC_PASSWORD # password to access transmission can remove if you dont want basic auth
      TRANSMISSION_RPC_AUTHENTICATION_REQUIRED: true # set to false if no auth wanted (recommended)
      TRANSMISSION_INCOMPLETE_DIR: /data/torrents/incomplete
      TRANSMISSION_DOWNLOAD_DIR: /data/torrents
      TRANSMISSION_PEER_LIMIT_GLOBAL: 2000
      TRANSMISSION_PEER_LIMIT_PER_TORRENT: 1000
      TRANSMISSION_DOWNLOAD_QUEUE_ENABLED: true
      TRANSMISSION_DOWNLOAD_QUEUE_SIZE: 30
      TRANSMISSION_RATIO_LIMIT: 0
      TRANSMISSION_RATIO_LIMIT_ENABLED: true
      OPENVPN_PROVIDER: PIA  # check https://github.com/haugene/docker-transmission-openvpn for supported VPN's PIA is great
      OPENVPN_CONFIG: us_seattle,france,switzerland,sweden,austria,italy,belgium # PIA's servers
      OPENVPN_USERNAME: $OPENVPN_USERNAME # VPN username
      OPENVPN_PASSWORD: $OPENVPN_PASSWORD # VPN password
      LOCAL_NETWORK: 192.168.7.0/24  # change to your local IP
      TRANSMISSION_WEB_UI: flood-for-transmission
    image: haugene/transmission-openvpn
    labels:
      caddy: transmission.$DOMAIN
      caddy.reverse_proxy: "{{upstreams 9091}}"
    logging:
      driver: json-file
      options:
        max-size: 10m
    networks:
      - caddy
    ports:
      - 9091:9091
    restart: unless-stopped
    volumes:
      - "<path/for/config>/transmission:/config"
      - "<path/for/downloads>:/data/torrents"
#### Rar and Zip file handler ####
  unpackerr:
    container_name: unpackerr
    environment:
      TZ: $TZ
      # General config
      UN_DEBUG: false
      UN_LOG_FILE: 
      UN_LOG_FILES: 10
      UN_LOG_FILE_MB: 10
      UN_INTERVAL: 2m
      UN_START_DELAY: 1m
      UN_RETRY_DELAY: 5m
      UN_MAX_RETRIES: 3
      UN_PARALLEL: 1
      UN_FILE_MODE: 0644
      UN_DIR_MODE: 0755
      # Sonarr Config
      UN_SONARR_0_URL: http://sonarr:8989
      UN_SONARR_0_API_KEY:        # <add sonarr api>
      UN_SONARR_0_PATHS_0: /data/torrents/series
      UN_SONARR_0_PROTOCOLS: torrent
      UN_SONARR_0_TIMEOUT: 10s
      UN_SONARR_0_DELETE_ORIG: false
      UN_SONARR_0_DELETE_DELAY: 5m
      # Radarr Config
      UN_RADARR_0_URL: http://radarr:7878
      UN_RADARR_0_API_KEY:         # <add radarr api>
      UN_RADARR_0_PATHS_0: /data/torrents/movies
      UN_RADARR_0_PROTOCOLS: torrent
      UN_RADARR_0_TIMEOUT: 10s
      UN_RADARR_0_DELETE_ORIG: false
      UN_RADARR_0_DELETE_DELAY: 5m
      # Lidarr Config
      UN_LIDARR_0_URL: http://lidarr:8686
      UN_LIDARR_0_API_KEY:        # <add lidarr api>
      UN_LIDARR_0_PATHS_0: /data/torrents/music
      UN_LIDARR_0_PROTOCOLS: torrent
      UN_LIDARR_0_TIMEOUT: 10s
      UN_LIDARR_0_DELETE_ORIG: false
      UN_LIDARR_0_DELETE_DELAY: 5m
      # Readarr Config
      UN_READARR_0_URL: http://readarr:8787
      UN_READARR_0_API_KEY:       # <add readarr api>
      UN_READARR_0_PATHS_0: /data/torrents/ebooks
      UN_READARR_0_PROTOCOLS: torrent
      UN_READARR_0_TIMEOUT: 10s
      UN_READARR_0_DELETE_ORIG: false
      UN_READARR_0_DELETE_DELAY: 5m      
    image: golift/unpackerr
    networks:
      - caddy
    restart: always
    security_opt:
      - no-new-privileges:true
    user: $PUID:$PGID
    volumes:
      - "<path/for/config>/unpackerr:/config"
      - "<path/for/downloads>:/data/torrents"

volumes:
  caddy_data: {}
